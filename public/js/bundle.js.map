{"version":3,"sources":["settings/settings.js","common/directives/loading.directive.js","pokedex/controller/pokedex.controller.js","pokedex/services/pokedex.service.js","pokemon/controller/comment.controller.js","pokemon/controller/pokemon.controller.js","pokemon/model/comment.model.js","pokemon/model/pokemon.model.js"],"names":["angular","app","module","config","$routeProvider","$locationProvider","html5Mode","when","templateUrl","otherwise","redirectTo","window","scope","Loading","template","restrict","directive","PokedexController","$pokedex","items","loading","get","then","response","controller","URL_API","DEFAULT_ROUTE","PokedexService","$http","$q","route","id","defer","url","getRoute","data","reject","results","resolve","promise","service","CommentController","$routeParams","CommentModel","comment","new","all","showForm","setData","push","user","text","JSON","parse","toJson","save","clearForm","PokemonController","PokemonModel","pokemon","firebase","list","db","database","ref","set","once","val","catch","err","factory","create","name","image","abilities","experience","params","sprites","front_default","base_experience"],"mappings":"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","file":"bundle.js","sourcesContent":["((angular) => {\n\n    'use strict';\n\n    var app = angular.module('app', ['ngRoute']);\n\n    app.config(function($routeProvider, $locationProvider) {\n\n       $locationProvider.html5Mode(true);\n\n       $routeProvider\n       .when('/', {\n          templateUrl : '../views/pokedex.html'\n       })\n\n       .when('/pokemon/:id', {\n          templateUrl : '../views/pokemon.html'\n       })\n\n       .otherwise ({ redirectTo: '/' });\n\n    });\n})(window.angular);\n","((angular) => {\n\n    'use strict';\n\n    var scope = {};\n\n    class Loading {\n\n        constructor(){\n\n            scope = this;\n\n            scope.template = `<svg version=\"1.1\" id=\"loader-1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"40px\" height=\"40px\" viewBox=\"0 0 50 50\" style=\"enable-background:new 0 0 50 50;\" xml:space=\"preserve\">\n                                <path fill=\"#fff\" d=\"M43.935,25.145c0-10.318-8.364-18.683-18.683-18.683c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615c8.072,0,14.615,6.543,14.615,14.615H43.935z\" transform=\"rotate(280 25 25)\">\n                                    <animateTransform attributeType=\"xml\" attributeName=\"transform\" type=\"rotate\" from=\"0 25 25\" to=\"360 25 25\" dur=\"0.6s\" repeatCount=\"indefinite\"></animateTransform>\n                                </path>\n                            </svg>`;\n\n            scope.restrict = 'A';\n        }\n\n    }\n\n    angular.module('app').directive('loading', () => new Loading());\n\n})(window.angular);\n","((angular) => {\n\n    'use strict';\n\n    var scope = {};\n\n    class PokedexController {\n\n        constructor($pokedex){\n\n            scope = this;\n\n            /**\n            * Services\n            */\n            scope.$pokedex = $pokedex;\n\n            /**\n            * Properties\n            */\n            scope.items = [];\n            scope.loading = true;\n        }\n\n        /**\n        * Initialize PokedexController\n        */\n        init(){\n\n            scope.$pokedex.get('pokemon/?limit=151&offset=0').then((response) => {\n                scope.items = response;\n                scope.loading = false;\n            });\n\n            return true;\n        }\n\n    }\n\n    angular.module('app').controller('PokedexController', PokedexController);\n\n})(window.angular);\n","((angular) => {\n\n    'use strict';\n\n    /**\n    * Constants of the service\n    */\n    const URL_API = 'https://pokeapi.co/api/v2/',\n          DEFAULT_ROUTE = 'pokemon';\n\n    class PokedexService {\n\n        constructor($http, $q){\n            this.$http = $http;\n            this.$q = $q;\n        }\n\n        /**\n        * Method to get data at API\n        */\n        get(route, id) {\n\n            let defer = this.$q.defer(),\n                url = this.getRoute(route, id);\n\n            this.$http.get(url).then((response)=> {\n\n                response = response.data;\n\n                if(!response){\n                    defer.reject('There isn\\'t result');\n                }\n\n                // It's necessary because the api doesn't has a pattern for responses\n                response = response.results || response;\n\n                defer.resolve(response);\n            });\n\n            return defer.promise;\n        }\n\n        /**\n        * Build route for request\n        */\n        getRoute(route = DEFAULT_ROUTE, id = 0) {\n\n            route = URL_API + route;\n\n            if(id){\n                route += `/${id}`;\n            }\n\n            return route;\n        }\n\n\n    }\n\n    angular.module('app').service('$pokedex', PokedexService);\n\n})(window.angular);\n","((angular) => {\n\n    'use strict';\n\n    var scope = {};\n\n    class CommentController {\n\n        constructor($routeParams, CommentModel){\n\n            scope = this;\n\n            /**\n            * Services\n            */\n            scope.$routeParams = $routeParams;\n            scope.CommentModel = CommentModel;\n\n            /**\n            * Properties\n            */\n            scope.comment = {\n                new: '',\n                all: []\n            };\n\n            scope.showForm = false;\n        }\n\n        /**\n        * Initialize CommentController\n        */\n         init(){\n\n            scope.comment = scope.CommentModel;\n            scope.comment.setData(scope.$routeParams.id);\n\n            scope.comment.get().then(function(response) {\n                scope.comment.all = response || [];\n            });\n\n            return true;\n        }\n\n        /**\n        * Add new comment in the list and save de list\n        */\n        send(){\n\n            scope.comment.all.push({\n                user: scope.comment.new.user,\n                text: scope.comment.new.text\n            });\n\n            scope.comment.all = JSON.parse(angular.toJson(scope.comment.all));\n\n            scope.comment.save(scope.comment.all);\n\n            scope.clearForm();\n        }\n\n        /**\n        * Just clear the form for new comment.\n        */\n        clearForm(){\n            scope.comment.new = {};\n        }\n\n        toogleForm(){\n            scope.showForm = !scope.showForm;\n        }\n\n    }\n\n    angular.module('app').controller('CommentController', CommentController);\n\n})(window.angular);\n","((angular) => {\n\n    'use strict';\n\n    var scope = {};\n\n    class PokemonController {\n\n        constructor($pokedex, $routeParams, CommentModel, PokemonModel){\n\n            scope = this;\n\n            /**\n            * Services\n            */\n            scope.$pokedex = $pokedex;\n            scope.$routeParams = $routeParams;\n            scope.PokemonModel = PokemonModel;\n\n            /**\n            * Properties\n            */\n            scope.pokemon = {};\n            scope.loading = true;\n        }\n\n        /**\n        * Initialize PokemonController\n        */\n         init(){\n\n            scope.$pokedex.get('pokemon', scope.$routeParams.id).then((response) => {\n                scope.pokemon = scope.PokemonModel;\n                scope.pokemon.setData(response);\n                scope.loading = false;\n            });\n\n            return true;\n        }\n\n    }\n\n    angular.module('app').controller('PokemonController', PokemonController);\n\n})(window.angular);\n","((angular, firebase) => {\n\n    'use strict';\n\n    class CommentModel {\n\n        constructor($q) {\n\n            /**\n            * Services\n            */\n            this.$q = $q;\n\n\n            /**\n            * Properties\n            */\n            this.pokemon = '';\n\n        }\n\n        setData(pokemon){\n            this.pokemon = pokemon;\n        }\n\n        save(list){\n            let db = firebase.database().ref(this.pokemon);\n            db.set(list);\n        }\n\n        get() {\n\n            let db = firebase.database().ref(this.pokemon),\n                defer = this.$q.defer();\n\n            db.once('value').then((response) => {\n                defer.resolve(response.val());\n            }).catch((err) => {\n                defer.reject(err);\n            });\n\n            return defer.promise;\n        }\n\n        static create($q){\n            return new CommentModel($q);\n        }\n\n    }\n\n    angular.module('app').factory('CommentModel', CommentModel.create);\n\n})(window.angular, window.firebase);\n","((angular) => {\n\n    'use strict';\n\n    class PokemonModel {\n\n        constructor() {\n            this.name = '';\n            this.image = '';\n            this.abilities = [];\n            this.experience = 0;\n        }\n\n        setData(params = {}){\n            this.name = params.name;\n             /*jshint camelcase: false */\n            this.image = params.sprites.front_default;\n            this.abilities = params.abilities;\n             /*jshint camelcase: false */\n            this.experience = params.base_experience;            \n        }\n\n        static create(){\n            return new PokemonModel();\n        }\n\n    }\n\n    angular.module('app').factory('PokemonModel', PokemonModel.create);\n\n})(window.angular);\n"]}
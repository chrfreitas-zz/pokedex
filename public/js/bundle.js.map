{"version":3,"sources":["settings/settings.js","pokedex/services/pokedex.service.js","pokedex/controller/pokedex.controller.js","pokemon/controller/comment.controller.js","pokemon/controller/pokemon.controller.js","pokemon/model/comment.model.js","pokemon/model/pokemon.model.js"],"names":["angular","app","module","config","$routeProvider","$locationProvider","html5Mode","when","templateUrl","otherwise","redirectTo","window","URL_API","DEFAULT_ROUTE","PokedexService","$http","$q","route","id","defer","url","getRoute","get","then","response","data","reject","results","resolve","promise","service","scope","PokedexController","$pokedex","items","loading","controller","CommentController","$routeParams","CommentModel","comment","new","all","setData","push","user","text","JSON","parse","toJson","save","clearForm","PokemonController","PokemonModel","pokemon","firebase","list","db","database","ref","set","once","val","catch","err","factory","create","name","image","abilities","experience","params","sprites","front_default","base_experience"],"mappings":"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","file":"bundle.js","sourcesContent":["((angular) => {\n\n    'use strict';\n\n    var app = angular.module('app', ['ngRoute']);\n\n    app.config(function($routeProvider, $locationProvider) {\n\n       $locationProvider.html5Mode(true);\n\n       $routeProvider\n       .when('/', {\n          templateUrl : '../views/pokedex.html'\n       })\n\n       .when('/pokemon/:id', {\n          templateUrl : '../views/pokemon.html'\n       })\n\n       .otherwise ({ redirectTo: '/' });\n\n    });\n})(window.angular);\n","((angular) => {\n\n    'use strict';\n\n    /**\n    * Constants of the service\n    */\n    const URL_API = 'https://pokeapi.co/api/v2/',\n          DEFAULT_ROUTE = 'pokemon';\n\n    class PokedexService {\n\n        constructor($http, $q){\n            this.$http = $http;\n            this.$q = $q;\n        }\n\n        /**\n        * Method to get data at API\n        */\n        get(route, id) {\n\n            let defer = this.$q.defer(),\n                url = this.getRoute(route, id);\n\n            this.$http.get(url).then((response)=> {\n\n                response = response.data;\n\n                if(!response){\n                    defer.reject('There isn\\'t result');\n                }\n\n                // It's necessary because the api doesn't has a pattern for responses\n                response = response.results || response;\n\n                defer.resolve(response);\n            });\n\n            return defer.promise;\n        }\n\n        /**\n        * Build route for request\n        */\n        getRoute(route = DEFAULT_ROUTE, id = 0) {\n\n            route = URL_API + route;\n\n            if(id){\n                route += `/${id}`;\n            }\n\n            return route;\n        }\n\n\n    }\n\n    angular.module('app').service('$pokedex', PokedexService);\n\n})(window.angular);\n","((angular) => {\n\n    'use strict';\n\n    var scope = {};\n\n    class PokedexController {\n\n        constructor($pokedex){\n\n            scope = this;\n\n            /**\n            * Services\n            */\n            scope.$pokedex = $pokedex;\n\n            /**\n            * Properties\n            */\n            scope.items = [];\n            scope.loading = true;\n        }\n\n        /**\n        * Initialize PokedexController\n        */\n        init(){\n\n            scope.$pokedex.get('pokemon').then((response) => {\n                scope.items = response;\n                scope.loading = false;\n            });\n\n            return true;\n        }\n\n    }\n\n    angular.module('app').controller('PokedexController', PokedexController);\n\n})(window.angular);\n","((angular) => {\n\n    'use strict';\n\n    var scope = {};\n\n    class CommentController {\n\n        constructor($routeParams, CommentModel){\n\n            scope = this;\n\n            /**\n            * Services\n            */\n            scope.$routeParams = $routeParams;\n            scope.CommentModel = CommentModel;\n\n            /**\n            * Properties\n            */\n            scope.comment = {\n                new: '',\n                all: []\n            };\n        }\n\n        /**\n        * Initialize CommentController\n        */\n         init(){\n\n            scope.comment = scope.CommentModel;\n            scope.comment.setData(scope.$routeParams.id);\n\n            scope.comment.get().then(function(response) {\n                scope.comment.all = response || [];\n            });\n\n            return true;\n        }\n\n        /**\n        * Add new comment in the list and save de list\n        */\n        send(){\n\n            scope.comment.all.push({\n                user: scope.comment.new.user,\n                text: scope.comment.new.text\n            });\n\n            scope.comment.all = JSON.parse(angular.toJson(scope.comment.all));\n\n            scope.comment.save(scope.comment.all);\n\n            scope.clearForm();\n        }\n\n        /**\n        * Just clear the form for new comment.\n        */\n        clearForm(){\n            scope.comment.new = {};\n        }\n\n    }\n\n    angular.module('app').controller('CommentController', CommentController);\n\n})(window.angular);\n","((angular) => {\n\n    'use strict';\n\n    var scope = {};\n\n    class PokemonController {\n\n        constructor($pokedex, $routeParams, CommentModel, PokemonModel){\n\n            scope = this;\n\n            /**\n            * Services\n            */\n            scope.$pokedex = $pokedex;\n            scope.$routeParams = $routeParams;\n            scope.PokemonModel = PokemonModel;\n\n            /**\n            * Properties\n            */\n            scope.pokemon = {};\n            scope.loading = true;\n        }\n\n        /**\n        * Initialize PokemonController\n        */\n         init(){\n\n            scope.$pokedex.get('pokemon', scope.$routeParams.id).then((response) => {\n                scope.pokemon = scope.PokemonModel;\n                scope.pokemon.setData(response);\n                scope.loading = false;\n            });\n\n            return true;\n        }\n\n    }\n\n    angular.module('app').controller('PokemonController', PokemonController);\n\n})(window.angular);\n","((angular, firebase) => {\n\n    'use strict';\n\n    class CommentModel {\n\n        constructor($q) {\n\n            /**\n            * Services\n            */\n            this.$q = $q;\n\n\n            /**\n            * Properties\n            */\n            this.pokemon = '';\n\n        }\n\n        setData(pokemon){\n            this.pokemon = pokemon;\n        }\n\n        save(list){\n            let db = firebase.database().ref(this.pokemon);\n            db.set(list);\n        }\n\n        get() {\n\n            let db = firebase.database().ref(this.pokemon),\n                defer = this.$q.defer();\n\n            db.once('value').then((response) => {\n                defer.resolve(response.val());\n            }).catch((err) => {\n                defer.reject(err);\n            });\n\n            return defer.promise;\n        }\n\n        static create($q){\n            return new CommentModel($q);\n        }\n\n    }\n\n    angular.module('app').factory('CommentModel', CommentModel.create);\n\n})(window.angular, window.firebase);\n","((angular) => {\n\n    'use strict';\n\n    class PokemonModel {\n\n        constructor() {\n            this.name = '';\n            this.image = '';\n            this.abilities = [];\n            this.experience = 0;\n        }\n\n        setData(params = {}){\n            this.name = params.name;\n             /*jshint camelcase: false */\n            this.image = params.sprites.front_default;\n            this.abilities = params.abilities;\n             /*jshint camelcase: false */\n            this.experience = params.base_experience;            \n        }\n\n        static create(){\n            return new PokemonModel();\n        }\n\n    }\n\n    angular.module('app').factory('PokemonModel', PokemonModel.create);\n\n})(window.angular);\n"]}